generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "pnpx zod-prisma-types"
  output   = "../src/prisma/dto"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "prisma"
}

model User {
  name       String      @default("")
  createdAt  DateTime    @default(now())
  imageUrl   String?
  deletedAt  DateTime?
  updatedAt  DateTime    @default(now())
  uid        String      @id
  type       User_type   @default(USER_NOT_INVITED)
  InviteInfo InviteInfo? @relation("UserInviteInfo")
}

model GoogleProfile {
  uid            String   @id
  sub            String   @unique
  name           String?
  given_name     String?
  family_name    String?
  picture        String?
  email          String?
  email_verified Boolean?
  locale         String?
}

model InviteTier {
  tier            String       @id
  availableAmount Int
  inviteInfo      InviteInfo[] @relation("UserInviteTier")

  @@index([tier])
}

model InviteInfo {
  uid                  String     @id
  code                 String     @unique
  tier                 String     
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @default(now())
  availableInviteCount Int
  inviteHistoryCount   Int        @default(0)
  user                 User       @relation("UserInviteInfo", fields: [uid], references: [uid])
  inviterTier          InviteTier @relation("UserInviteTier", fields: [tier], references: [tier])

  @@index([tier])
  @@index([code])
  @@index([uid])
}

enum User_type {
  USER_NOT_INVITED
  USER
  ADMIN
}

model InviteRecord {
  id         Int      @id @default(autoincrement())
  inviteeUid String
  inviterUid String
  createdAt  DateTime @default(now())
}
